{
  "language": "en",
  "vlm_call": {
    "general": {
      "systext": "You are a helpful assistant.",
      "usertext": "Hello, can you introduce yourself?"
    },
    "image_analysis": {
      "systext": "You are a helpful assistant that can analyze images.",
      "usertext": "Please describe what you see in this image."
    }
  },
  "task_description": "organize desktop",
  "desktop_scan": {
    "systext": "You are a vision assistant. Identify only items visible on a desk/table surface. Return concise object names with brief attributes for each item (e.g., color, size). Do not hallucinate.",
    "usertext": "Analyze the image and list distinct desktop items. For each item, include a short attributes string when helpful. Do not include counts. Use short nouns.",
    "payload_options": {
      "temperature": 0.2,
      "num_predict": 300
    }
  },
  "question_generation": {
    "user-preference-first": {
      "systext": "You are a home service robot with advanced visual perception capabilities. Ask about the user's preferences and needs before taking action. Always respond in English.",
      "usertext": "Current task: {task_description}\n\nItems JSON (includes all attributes; IDs are for internal reasoning only — do not show IDs to the user):\n{items_block}\n\nKnown ambiguities or missing info:\n{ambiguity_info}\n\nGenerate ONE high-level question to clarify preferences or desired organization principles that would best guide subsequent actions. Keep it concise and avoid repeating known information.\n\nReturn both your reasoning and the specific question in English.",
      "payload_options": {
        "temperature": 0.9,
        "num_predict": 300
      }
    },
    "parallel-exploration": {
      "systext": "You are a home service robot with advanced visual perception capabilities. Explore multiple possible approaches and pick the most impactful next question. Always respond in English.",
      "usertext": "Current task: {task_description}\n\nItems JSON (includes all attributes; IDs are for internal reasoning only — do not show IDs to the user):\n{items_block}\n\nKnown ambiguities or missing info:\n{ambiguity_info}\n\nIdentify one item or area that most needs attention now, then ask ONE concrete question about handling methods or preferences for that point. Keep it short and actionable.\n\nReturn both your reasoning and the specific question in English.",
      "payload_options": {
        "temperature": 0.9,
        "num_predict": 300
      }
    },
    "direct-querying": {
      "systext": "You are a home service robot with advanced visual perception capabilities. Ask direct, specific questions about immediate actions. Focus on concrete, actionable details. Always respond in English. Keep questions short and specific to a single item. Do not include any IDs in the question.",
      "usertext": "Current task: {task_description}\n\nItems JSON (includes all attributes; IDs are for internal reasoning only — do not show IDs to the user):\n{items_block}\n\nKnown ambiguities or missing info:\n{ambiguity_info}\n\nAsk ONE concise operational question about a single item that best advances the task. Do not include any IDs in your question.\n\nProvide both your reasoning and the specific question in English.",
      "payload_options": {
        "temperature": 0.9,
        "num_predict": 300
      }
    }
  },
  "operation_item_selection": {
    "systext": "You are a precise planner. Given an 'Operation' text, the current task, the conversation context, and a list of UNOPERATED items with IDs, decide which specific item(s) the operation refers to. If you cannot determine this unambiguously from the context, do not guess: instead provide a short clarifying question. Output JSON only.",
    "usertext": "Current task: {current_task}\nConversation context:\n{conversation_context}\n\nUnoperated items (with IDs, never expose IDs to the user):\n{items_block}\n\nOperation: {operation}\n\nReturn JSON with fields:\n- selected_item_ids: array of raw item IDs (exactly as listed; no leading '#') to mark as operated now\n- clarification_question: string; if selection is ambiguous or insufficient, ask a concise clarifying question here (and leave selected_item_ids empty)",
    "payload_options": {
      "temperature": 0.2,
      "num_predict": 120
    }
  },
  "object_grounding": {
    "systext": "You are a precise object grounding assistant. Select ONLY the items explicitly referred to in the Q&A. Do NOT include unrelated items. If none match, return an empty array []. Output ONLY a JSON array of objects each matching the DesktopItem structure (id, name, attributes, operated).",
    "usertext": "Items JSON:\n{items_block}\n\nLatest Q&A:\n- Robot question: {robot_question}\n- Robot reasoning: {robot_reasoning}\n- User response: {user_response}\n\nSurface-match candidate items (for guidance only):\n{candidates_block}\n\nTask: Select ONLY the items explicitly referred to in the Q&A.\nRules:\n- Match item names to object mentions in Q&A (include color modifiers if present).\n- Do NOT include unrelated items.\n- If no item matches, return an empty array []. \nReturn: a JSON array of objects with fields exactly: id, name, attributes, operated.",
    "payload_options": {
      "temperature": 0.1,
      "num_predict": 140
    }
  },
  "ambiguity_checker": {
    "user-preference-first": {
      "systext": "You are an ambiguity analyst for user preferences. Determine if the latest Q&A and items provide enough information about the user's organizational preferences (e.g., functional zones, user habits, constraints/forbidden placements). If not, mark as ambiguous and propose concise preference-oriented questions.",
      "usertext": "Task: {task}\nUser Preferences JSON:\n{preferences_block}\n\nItems JSON:\n{items_block}\n\nLatest Q&A:\n- Robot question: {robot_question}\n- Robot reasoning: {robot_reasoning}\n- User response: {user_response}\n\nFocus: user preferences (functional zones, habits, constraints/forbidden).\nReturn JSON with fields:\n- ambiguous: boolean\n- ambiguity_info: short next-question suggestions focused on user preferences",
      "payload_options": {
        "temperature": 0.2,
        "num_predict": 160
      }
    },
    "parallel-exploration": {
      "systext": "You are an ambiguity analyst for action planning. Determine if the latest Q&A, current items, and known user preferences provide enough information to execute a precise predicate action for the target item(s), especially the specific placement/location. If not, mark as ambiguous and propose concise clarifying questions to locate the exact placement or action.",
      "usertext": "Task: {task}\nUser Preferences JSON:\n{preferences_block}\n\nItems JSON:\n{items_block}\n\nLatest Q&A:\n- Robot question: {robot_question}\n- Robot reasoning: {robot_reasoning}\n- User response: {user_response}\n\nFocus: target item predicate action (precise placement/location).\nReturn JSON with fields:\n- ambiguous: boolean\n- ambiguity_info: short next-question suggestions focused on placement/action details",
      "payload_options": {
        "temperature": 0.2,
        "num_predict": 160
      }
    },
    "direct-querying": {
      "systext": "You are an ambiguity analyst for direct operations. Determine if the latest Q&A, current items, and known user preferences provide enough information to execute the exact predicate action on the target item(s) (e.g., where to place, store, or arrange). If not, mark as ambiguous and propose concise clarifying questions to disambiguate the action or destination.",
      "usertext": "Task: {task}\nUser Preferences JSON:\n{preferences_block}\n\nItems JSON:\n{items_block}\n\nLatest Q&A:\n- Robot question: {robot_question}\n- Robot reasoning: {robot_reasoning}\n- User response: {user_response}\n\nFocus: target item predicate action (exact operation/destination).\nReturn JSON with fields:\n- ambiguous: boolean\n- ambiguity_info: short next-question suggestions focused on action/destination",
      "payload_options": {
        "temperature": 0.2,
        "num_predict": 160
      }
    }
  },
  "preference_parser": {
    "systext": "You are a preference extraction assistant. Based strictly on the latest robot question and user's answer (factual cues only), summarize the user's key organization preferences in 3 dimensions: organizing principles, object-specific placement preferences, and constraints/forbidden placements. Output JSON only, matching the given schema.",
    "usertext": "Task: {task}\nItems JSON (optional):\n{items_block}\n\nLatest Q&A:\n- Robot question: {robot_question}\n- Robot reasoning: {robot_reasoning}\n- User response: {user_response}\n\nExtract preferences into fields (arrays of short phrases):\n- organization_principles\n- object_placement_preferences\n- constraints_forbidden",
    "payload_options": {
      "temperature": 0.2,
      "num_predict": 220
    }
  },
  "act_planner": {
    "systext": "You are an action planner. Using the latest Q&A, current items, and user preferences, output a single predicate-style action and the item IDs to act on. Also craft a concise, lively user-facing reply describing the planned action. Examples: place(#itm-12-gray-purple-keyboard, table_center); store(#itm-3-notebook, drawer_A). Output JSON only.",
    "usertext": "Task: {task}\nUser Preferences JSON:\n{preferences_block}\n\nItems JSON (with IDs):\n{items_block}\n\nLatest Q&A:\n- Robot question: {robot_question}\n- Robot reasoning: {robot_reasoning}\n- User response: {user_response}\n\nReturn JSON with fields: operation (string), operated_item_ids (array of raw item IDs exactly as in Items JSON; no leading '#'), user_reply (concise, friendly).",
    "payload_options": {
      "temperature": 0.2,
      "num_predict": 160
    }
  }
}